Traceback (most recent call last):
  File "/home/vkeller/.local/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/vkeller/.local/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Fonction permettant de retourner la langue d'un texte donn√© en param√®tre
# sur la base d'une analyse de certains mots clefs
# La liste des mots clefs est bas√©e sur les classements internationaux (comme COCA)
# Argument 1 : le texte clair
# Retour     : une liste qui contient : [la langue possible, le nombre d'occurences des mots-clefs] 
def analyse_langue(texte):
    mots_clefs_f = ['le','la','les','un','une','de','des','il','elle','et','non','est','on','vous','nous','se','pas','leur']
    mots_clefs_a = ['the','be','to','of','and','in','that','have','it','for','not','is','if']
    retour = ['',0]
    l = len(texte)
    nbr_f = 0
    nbr_a = 0
    for mot_clef in mots_clefs_f:
        ## A REMPLIR ICI
        
    for mot_clef in mots_clefs_a:
        ## A REMPLIR ICI

    if nbr_f == 0 and nbr_a == 0:
        ## A REMPLIR ICI
        
    return retour
------------------

[0;36m  Input [0;32mIn [6][0;36m[0m
[0;31m    for mot_clef in mots_clefs_a:[0m
[0m    ^[0m
[0;31mIndentationError[0m[0;31m:[0m expected an indented block

IndentationError: expected an indented block (3478019629.py, line 16)

